<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.react.pnld.mappers.TrainingIndicatorMapper">

    <cache/>

    <resultMap id="trainingInstitutionData" type="com.react.pnld.dto.indicator.training.TrainingIndicatorInstitutionData">
        <result property="year" column="anno_capacitacion" />
        <result property="institutionCounterPNLD" column="cantidad_colegio" />
        <result property="percentageInstitutions" column="colegio_porcentaje"/>
        <result property="firstTimeInstitutionCounter" column="primera_vez_porcentaje"/>
    </resultMap>

    <resultMap id="trainingInstitutionIndicator" type="com.react.pnld.dto.indicator.TrainingIndicatorDTO">
        <id property="id" column="id_region"/>
        <result property="regionName" column="nombre_region" />
        <collection property="trainingIndicatorDataList" resultMap="trainingInstitutionData"/>
    </resultMap>

    <select id="trainingInstitutionData" resultMap="trainingInstitutionIndicator">
        SELECT
            d.anno_capacitacion,
            COUNT(d.rbd_colegio) AS cantidad_colegio,
            r.id AS id_region, r.nombre AS nombre_region,
            SUM
                (CASE WHEN d.rbd_colegio IN
                    (SELECT col.rbd
                        FROM pnld.colegio AS col
                        JOiN pnld.docente AS doc
                        ON col.rbd = doc.rbd_colegio
                        GROUP BY col.rbd
                        HAVING COUNT(DISTINCT doc.anno_capacitacion) = 1)
                THEN 1
                ELSE 0
            END)
            AS primera_vez_porcentaje
        FROM pnld.docente AS d
        JOIN pnld.colegio AS c ON d.rbd_colegio = c.rbd
        JOIN pnld.region AS r ON c.id_region = r.id
        WHERE d.anno_capacitacion BETWEEN #{fromYear} AND #{toYear}
            AND r.id = #{regionId}
        GROUP BY r.id, d.anno_capacitacion
    </select>

    <resultMap id="trainingTeacherDataByGender" type="com.react.pnld.dto.indicator.training.TrainingIndicatorTeacherDataByGender">
        <id property="gender" column="genero"/>
        <result property="approvedTrainingCounter" column="capacitacion_aprobada" />
        <result property="notApprovedTrainingCounter" column="capacitacion_reprobada" />
        <result property="assistanceCounter" column="asiste_jornada"/>
        <result property="notAssistanceCounter" column="no_asiste_jornada"/>
        <result property="preTestCompletedCounter" column="pre_test_completado"/>
        <result property="preTestNotCompletedCounter" column="pre_test_no_completado"/>

    </resultMap>

    <resultMap id="trainingTeacherData" type="com.react.pnld.dto.indicator.training.TrainingIndicatorTeacherData">
        <id property="year" column="anno_capacitacion" />
        <collection property="dataByGenderList" resultMap="trainingTeacherDataByGender" javaType="List"/>
    </resultMap>

    <resultMap id="trainingIndicatorTeacher" type="com.react.pnld.dto.indicator.TrainingIndicatorDTO">
        <id property="id" column="id_region"/>
        <result property="regionName" column="nombre_region" />
        <collection property="trainingIndicatorDataList" resultMap="trainingTeacherData" javaType="List"/>
    </resultMap>

    <select id="trainingTeacherData" resultMap="trainingIndicatorTeacher">
        SELECT
            d.anno_capacitacion, g.tipo AS genero,
            COUNT(d.asiste_jornada) FILTER(WHERE d.asiste_jornada = true) as asiste_jornada,
            COUNT(d.asiste_jornada) FILTER(WHERE d.asiste_jornada = false) as no_asiste_jornada,
            COUNT(d.capacitacion_aprobada) FILTER(WHERE d.capacitacion_aprobada = true) AS capacitacion_aprobada,
            COUNT(d.capacitacion_aprobada) FILTER(WHERE d.capacitacion_aprobada = false) AS capacitacion_reprobada,
            COUNT(tc.estado) FILTER(WHERE tc.estado = 'finalizado' AND tc.tipo = 'pre-capacita') AS pre_test_completado,
            COUNT(tc.estado) FILTER(WHERE tc.estado != 'finalizado' AND tc.tipo = 'pre-capacita') AS pre_test_no_completado,
            r.id AS id_region, r.nombre AS nombre_region
        FROM
            pnld.docente AS d
            JOIN pnld.test_capacitacion AS tc ON d.rut = tc.rut_docente
            JOIN pnld.genero AS g ON d.id_genero = g.id
            JOIN pnld.colegio AS c ON d.rbd_colegio = c.rbd
            JOIN pnld.region AS r ON c.id_region = r.id
        WHERE d.anno_capacitacion BETWEEN #{fromYear} AND #{toYear}
            AND
            r.id = #{regionId}
        GROUP BY d.anno_capacitacion, g.tipo, r.id;
    </select>

</mapper>